name: "Release"
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Example: 1.1.0"
        required: true
        type: string
jobs:
  image:
    name: Image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: devcontainers/ci@v0.2
        with:
          push: always
          imageName: ghcr.io/customink/crypteia-ci
          cacheFrom: ghcr.io/customink/crypteia-ci
          runCmd: echo DONE!
  debian:
    name: Debian x86_64/arm64
    runs-on: ubuntu-20.04
    needs: image
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: cink-continuous-integration
          password: ${{ secrets.PUBLIC_GITHUB_TOKEN_PACKAGES }}
      - uses: devcontainers/ci@v0.2
        env: 
          CRYPTEIA_VERSION: ${{ github.event.inputs.version }}
        with:
          push: never
          cacheFrom: ghcr.io/customink/crypteia-ci
          env: |
            CRYPTEIA_VERSION
          runCmd: ./package/deploy-image-debian
  amzn:
    name: AmazonLinux2 x86_64/arm64
    runs-on: ubuntu-20.04
    needs: image
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: cink-continuous-integration
          password: ${{ secrets.PUBLIC_GITHUB_TOKEN_PACKAGES }}
      - uses: devcontainers/ci@v0.2
        env: 
          CRYPTEIA_VERSION: ${{ github.event.inputs.version }}
        with:
          push: never
          cacheFrom: ghcr.io/customink/crypteia-ci
          env: |
            CRYPTEIA_VERSION
          runCmd: ./package/deploy-image-amzn
  release:
    name: Create Release
    runs-on: ubuntu-20.04
    needs: [debian, amzn]
    steps:
      - name: CHANGELOG Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.0.0
        with:
          validation_level: warn
          version: ${{ github.event.inputs.version }}
          path: ./CHANGELOG.md
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: false
          tag: ${{ steps.changelog_reader.outputs.version }}
          name: Release ${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          token: ${{ secrets.GITHUB_TOKEN }}
